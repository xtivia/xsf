/**
 * Copyright (c) 2015 Xtivia, Inc. All rights reserved.
 *
 * This file is part of the Xtivia Services Framework (XSF) library.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
package com.xtivia.xsf.core.commands;

/**
 * class CommandResult: Container for the result information from a command execution.
 */
public class CommandResult {

	/**
	 * succeeded: Flag indicating whether the execution was successful or not.
	 */
	private  boolean succeeded = true;
	/**
	 * data: The data generated by the command.
	 */
	private  Object  data = null;
	/**
	 * message: A message generated by the command.
	 */
	private  String  message = "";

	/**
	 * CommandResult: Parameterless constructor.
	 */
	public CommandResult() {
	}

	/**
	 * CommandResult: Constructor that takes the initial values.
	 * @param succeeded
	 * @param data
	 * @param message
	 */
	public CommandResult(boolean succeeded, Object data, String message) {
		this.succeeded=succeeded;
		this.data = data;
		this.message = message;
	}

	/**
	 * CommandResult: Another result to set flag and message w/o care about the data.
	 * @param succeeded
	 * @param message
	 */
	public CommandResult(final boolean succeeded, final String message) {
		this.succeeded=succeeded;
		this.message = message;
	}

	/**
	 * CommandResult: Simple constructor for just the data.
	 * @param data
	 */
	public CommandResult(final Object data) {
		this.data = data;
	}

	/**
	 * isSucceeded: Returns the result of the succeeded flag.
	 * @return boolean <code>true</code> if the command succeeded, otherwise it failed.
	 */
	public boolean isSucceeded() {
		return succeeded;
	}

	/**
	 * setSucceeded: Sets the succeeded flag for the result.
	 * @param succeeded
	 * @return CommandResult The current instance to support method chaining.
	 */
	public CommandResult setSucceeded(boolean succeeded) {
		this.succeeded = succeeded;
		return this;
	}

	/**
	 * getData: Returns the data generated by the command result.
	 * @return Object The data or <code>null</code>.
	 */
	public Object getData() {
		return data;
	}

	/**
	 * setData: Sets the data for the command result.
	 * @param data
	 * @return CommandResult The current instance to support method chaining.
	 */
	public CommandResult setData(Object data) {
		this.data = data;
		return this;
	}

	/**
	 * getMessage: Returns the message generated by the command.
	 * @return String The message.
	 */
	public String getMessage() {
		return message;
	}

	/**
	 * setMessage: Sets the message for the command result.
	 * @param message
	 * @return CommandResult The current instance to support method chaining.
	 */
	public CommandResult setMessage(String message) {
		this.message = message;
		return this;
	}
}
